{"ast":null,"code":"var _jsxFileName = \"/home/staj/Desktop/ForTutorial/OwaspZAP-React-App/src/main/ui/src/components/dropdown/Dropdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport './dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n  document.addEventListener('mousedown', e => {\n    // user click toggle\n    if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n      content_ref.current.classList.toggle('active');\n    } else {\n      // user click outside toggle and content\n      if (content_ref.current && !content_ref.current.contains(e.target)) {\n        content_ref.current.classList.remove('active');\n      }\n    }\n  });\n};\n\nconst Dropdown = props => {\n  _s();\n\n  const dropdown_toggle_el = useRef(null);\n  const dropdown_content_el = useRef(null);\n  clickOutsideRef(dropdown_content_el, dropdown_toggle_el);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      ref: dropdown_toggle_el,\n      className: \"dropdown__toggle\",\n      children: [props.icon ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: props.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 34\n      }, this) : '', props.badge ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dropdown__toggle-badge\",\n        children: props.badge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 35\n      }, this) : '', props.customToggle ? props.customToggle() : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dropdown_content_el,\n      className: \"dropdown__content\",\n      children: [props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : '', props.renderFooter ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__footer\",\n        children: props.renderFooter()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"9meCYIWWATC8BqD162kgmN/SNsA=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/home/staj/Desktop/ForTutorial/OwaspZAP-React-App/src/main/ui/src/components/dropdown/Dropdown.jsx"],"names":["React","useRef","clickOutsideRef","content_ref","toggle_ref","document","addEventListener","e","current","contains","target","classList","toggle","remove","Dropdown","props","dropdown_toggle_el","dropdown_content_el","icon","badge","customToggle","contentData","renderItems","map","item","index","renderFooter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,eAAe,GAAG,CAACC,WAAD,EAAcC,UAAd,KAA6B;AACjDC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAwCC,CAAD,IAAO;AAC1C;AACA,QAAIH,UAAU,CAACI,OAAX,IAAsBJ,UAAU,CAACI,OAAX,CAAmBC,QAAnB,CAA4BF,CAAC,CAACG,MAA9B,CAA1B,EAAiE;AAC7DP,MAAAA,WAAW,CAACK,OAAZ,CAAoBG,SAApB,CAA8BC,MAA9B,CAAqC,QAArC;AACH,KAFD,MAEO;AACH;AACA,UAAIT,WAAW,CAACK,OAAZ,IAAuB,CAACL,WAAW,CAACK,OAAZ,CAAoBC,QAApB,CAA6BF,CAAC,CAACG,MAA/B,CAA5B,EAAoE;AAChEP,QAAAA,WAAW,CAACK,OAAZ,CAAoBG,SAApB,CAA8BE,MAA9B,CAAqC,QAArC;AACH;AACJ;AACJ,GAVD;AAWH,CAZD;;AAcA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAEtB,QAAMC,kBAAkB,GAAGf,MAAM,CAAC,IAAD,CAAjC;AACA,QAAMgB,mBAAmB,GAAGhB,MAAM,CAAC,IAAD,CAAlC;AAEAC,EAAAA,eAAe,CAACe,mBAAD,EAAsBD,kBAAtB,CAAf;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAQ,MAAA,GAAG,EAAEA,kBAAb;AAAiC,MAAA,SAAS,EAAC,kBAA3C;AAAA,iBAEQD,KAAK,CAACG,IAAN,gBAAa;AAAG,QAAA,SAAS,EAAEH,KAAK,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,cAAb,GAA8C,EAFtD,EAKQH,KAAK,CAACI,KAAN,gBAAc;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA,kBAA0CJ,KAAK,CAACI;AAAhD;AAAA;AAAA;AAAA;AAAA,cAAd,GAA8E,EALtF,EAQQJ,KAAK,CAACK,YAAN,GAAqBL,KAAK,CAACK,YAAN,EAArB,GAA4C,EARpD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,GAAG,EAAEH,mBAAV;AAA+B,MAAA,SAAS,EAAC,mBAAzC;AAAA,iBAEQF,KAAK,CAACM,WAAN,IAAqBN,KAAK,CAACO,WAA3B,GAAyCP,KAAK,CAACM,WAAN,CAAkBE,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiBV,KAAK,CAACO,WAAN,CAAkBE,IAAlB,EAAwBC,KAAxB,CAAvC,CAAzC,GAAkH,EAF1H,EAKQV,KAAK,CAACW,YAAN,gBACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACKX,KAAK,CAACW,YAAN;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,GAII,EATZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAlCD;;GAAMZ,Q;;KAAAA,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, {useRef} from 'react'\n\nimport './dropdown.css'\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst Dropdown = props => {\n\n    const dropdown_toggle_el = useRef(null)\n    const dropdown_content_el = useRef(null)\n\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\n    \n    return (\n        <div className='dropdown'>\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\n                {\n                    props.icon ? <i className={props.icon}></i> : ''\n                }\n                {\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\n                }\n                {\n                    props.customToggle ? props.customToggle() : ''\n                }\n            </button>\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\n                {\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\n                }\n                {\n                    props.renderFooter ? (\n                        <div className=\"dropdown__footer\">\n                            {props.renderFooter()}\n                        </div>\n                    ) : ''\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Dropdown\n"]},"metadata":{},"sourceType":"module"}